@{
    // temporary...
    // wainting for https://github.com/dotnet/aspnetcore/issues/18539
}

@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}/{Name11}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}/{Name11}/{Name12}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}/{Name11}/{Name12}/{Name13}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}/{Name11}/{Name12}/{Name13}/{Name14}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}/{Name11}/{Name12}/{Name13}/{Name14}/{Name15}";
@page "/lecture/{OwnerAccount}/{LectureName}/page/{Branch}/{Name1}/{Name2}/{Name3}/{Name4}/{Name5}/{Name6}/{Name7}/{Name8}/{Name9}/{Name10}/{Name11}/{Name12}/{Name13}/{Name14}/{Name15}/{Name16}";
@inherits ALMS.App.Components.Contents.FiniteDepthPageComponent;
@using Microsoft.EntityFrameworkCore;

<AuthorizeView>
    <Authorized>
        <div class="ui menu">
            <a class="item">Browse</a>
            <a class="item">Submit</a>
            <div class="right menu">
                <a class="item">Sign Up</a>
                <a class="item">Help</a>
            </div>
        </div>


        @{
            var user = DB.Context.Users.Where(x => x.Account == context.User.Identity.Name).FirstOrDefault();
            if (user != null && Lecture != null)
            {
                var branch = user.IsTeacher(Lecture) ? Branch : "master";
                <ALMS.App.Components.Contents.PageComponent Lecture="@Lecture" Path="@Path" Branch="@branch" User="@user" />
            }
        }
    </Authorized>
</AuthorizeView>


@code{

    [Parameter] public string Name1 { get; set; }
    [Parameter] public string Name2 { get; set; }
    [Parameter] public string Name3 { get; set; }
    [Parameter] public string Name4 { get; set; }
    [Parameter] public string Name5 { get; set; }
    [Parameter] public string Name6 { get; set; }
    [Parameter] public string Name7 { get; set; }
    [Parameter] public string Name8 { get; set; }
    [Parameter] public string Name9 { get; set; }
    [Parameter] public string Name10 { get; set; }
    [Parameter] public string Name11 { get; set; }
    [Parameter] public string Name12 { get; set; }
    [Parameter] public string Name13 { get; set; }
    [Parameter] public string Name14 { get; set; }
    [Parameter] public string Name15 { get; set; }
    [Parameter] public string Name16 { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var names = new string[] { Name1, Name2, Name3, Name4, Name5, Name6, Name7, Name8, Name9, Name10, Name11, Name12, Name13, Name14, Name15, Name16 }.Where(x => !string.IsNullOrEmpty(x));
        Path = string.Join("/", names);
        StateHasChanged();
    }
}