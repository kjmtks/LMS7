@if (string.IsNullOrWhiteSpace(ErrorMessage))
{
    if (!Building)
    {
        @renderer
    }
    else
    {
        <br />
        <br />
        <br />
        <br />
        <div class="ui basic segment">
            <div class="ui active inverted dimmer">
                <div class="ui medium text loader">Page building...</div>
            </div>
            <br />
            <br />
            <br />
            <br />
            <br />
            <br />
        </div>
    }
}
else
{
    <ALMS.App.Components.Utils.ErrorMessageComponent Subject="@ErrorSubject" ErrorMessage="@ErrorMessage" />
}


@code {

    [Parameter]
    public ALMS.App.Models.Entities.Lecture Lecture { get; set; }
    [Parameter]
    public ALMS.App.Models.Entities.User User { get; set; }
    [Parameter]
    public string Path { get; set; }
    [Parameter]
    public string Branch { get; set; }

    protected ALMS.App.Models.Contents.Page Page;
    protected RenderFragment renderer;
    protected string ErrorMessage;
    protected string ErrorSubject;

    protected bool Building = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if(firstRender)
        {
            Building = true;
            StateHasChanged();
            try
            {
                Page = new ALMS.App.Models.Contents.Page(Lecture, Path, Branch);
                renderer = await Page.RenderAsync(User);
            }
            catch (Exception e)
            {
                ErrorSubject = e.Message;
                ErrorMessage = e.StackTrace;
            }
            Building = false;
            StateHasChanged();
        }
    }

}
